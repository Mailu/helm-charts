# Default values for mailu.

# A list of mail hostnames is required. The first will be used as primary mail hostname
hostnames: []
#  - mail.example.com
#  - imap.example.com

# The mail domain is required. See https://github.com/Mailu/Mailu/blob/master/docs/faq.rst#what-is-the-difference-between-domain-and-hostnames
domain: example.com

# The secret key is required for protecting authentication cookies and must be set individually for each deployment
secretKey: chang3m3!

# An initial account can automatically be created:
#initialAccount:
#  username: mailadmin
#  domain: mydomain.com
#  password: chang3m3!


nameOverride: ""
fullnameOverride: ""
clusterDomain: cluster.local

nodeSelector: {}

# Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: {}

# Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

database:
  # type of the database for mailu (sqlite or mysql)
  # default database is an embedded sqlite
  # for mysql, see settings below
  type: sqlite

  # type of the database for roundcube (sqlite or mysql)
  # default database is an embedded sqlite
  # for mysql, see settings below
  roundcubeType: sqlite

# For mysql/mariadb use the following config:
# Set the host to use an external database.
# If not host is set, a database instance is created by this chart.
#   type: mysql
  mysql: {}
#    host: external-db-hostname
    # root password for mysql database
#    rootPassword: chang3m3! # can only be set for embedded mysql

    # settings for mailu (required if mailu database type is "mysql")
#    database: mailu
#    user: mailu
#    password: chang3m3!

    # settings for roundcube (required if roundcube database type is "mysql")
#    roundcubeDatabase: roundcube
#    roundcubeUser: roundcube
#    roundcubePassword: chang3m3!

persistence:
#  claimEnabled: false
  size: 100Gi
  accessMode: ReadWriteOnce
  #annotations:
  #  "helm.sh/resource-policy": keep
  #hostPath: /path/on/the/host
  #existingClaim: name-of-existing.claim
  #storageClass: "-"
  #claimNameOverride: my-claim-name

# Change this if you're using different address ranges for pods
subnet: 10.42.0.0/16

# Version of mailu docker images to use when not specified otherwise
mailuVersion: master

# default log level. can be overridden globally or per service
logLevel: WARNING

mail:
  messageSizeLimitInMegabytes: 50
  authRatelimit: 10/minute;1000/hour

# if empty defaults [chart-full-name]-certificates
certificateSecretName: ""

# certmanager settings
certmanager:
  enabled: true
  # check your installed cert manager api version using eg. kubectl api-versions | grep -E 'cert.*manager'
  apiVersion: cert-manager.io/v1alpha2
  # ClusterIssuer or Issuer
  issuerType: ClusterIssuer
  # issuer name set in cert manager deployment
  issuerName: letsencrypt


# Set ingress and loadbalancer config
ingress:
  enabled: false
  externalIngress: true
  tlsFlavor: cert
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"

# Frontend load balancer for non-HTTP(s) services
front:
  # logLevel: WARNING
  image:
    repository: mailu/nginx
    # tag defaults to mailuVersion
    # tag: master
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 200Mi
      cpu: 200m

admin:
  # logLevel: WARNING
  image:
    repository: mailu/admin
    # tag defaults to mailuVersion
    # tag: master
  resources:
    requests:
      memory: 500Mi
      cpu: 500m
    limits:
      memory: 500Mi
      cpu: 500m
  persistence: {}    
#  persistence:
#    claimEnabled: true
#    size: 100Gi
#    accessMode: ReadWriteOnce
#    #annotations:
#    #  "helm.sh/resource-policy": keep
#    #hostPath: /path/on/the/host
#    #existingClaim: name-of-existing.claim
#    #storageClass: "-"
#    #claimNameOverride: my-claim-name    

redis:
  image:
    repository: redis
    tag: 5-alpine
  resources:
    requests:
      memory: 200Mi
      cpu: 100m
    limits:
      memory: 300Mi
      cpu: 200m
  persistence: {}    
#  persistence:
#    claimEnabled: true
#    size: 100Gi
#    accessMode: ReadWriteOnce
#    #annotations:
#    #  "helm.sh/resource-policy": keep
#    #hostPath: /path/on/the/host
#    #existingClaim: name-of-existing.claim
#    #storageClass: "-"
#    #claimNameOverride: my-claim-name      

postfix:
  # logLevel: WARNING
  image:
    repository: mailu/postfix
    # tag defaults to mailuVersion
    # tag: master
  resources:
    requests:
      memory: 2Gi
      cpu: 500m
    limits:
      memory: 2Gi
      cpu: 500m
  persistence: {}    
#  persistence:
#    claimEnabled: true
#    size: 100Gi
#    accessMode: ReadWriteOnce
#    #annotations:
#    #  "helm.sh/resource-policy": keep
#    #hostPath: /path/on/the/host
#    #existingClaim: name-of-existing.claim
#    #storageClass: "-"
#    #claimNameOverride: my-claim-name 
  customConfig: 
    conf:  
      main.cf: |-
        ###############
        # General
        ###############

        # Logging configuration
        maillog_file = /dev/stdout

        # Main domain and hostname
        mydomain = mailu.local
        myhostname = admin.mailu.local
        myorigin = $mydomain

        # Queue location
        queue_directory = /queue

        # Message size limit
        message_size_limit = 52428800

        # Relayed networks
        mynetworks = 127.0.0.1/32 [::1]/128 10.1.2.0/24 

        # Empty alias list to override the configuration variable and disable NIS
        alias_maps =

        # Podop configuration
        podop = socketmap:unix:/tmp/podop.socket:

        # Only accept virtual emails
        mydestination =

        # Relayhost if any is configured
        relayhost = 


        # Recipient delimiter for extended addresses
        recipient_delimiter = +

        # Only the front server is allowed to perform xclient
        # In kubernetes and Docker swarm, such address cannot be determined using the hostname. Allow for the whole Mailu subnet instead.
        smtpd_authorized_xclient_hosts=10.1.2.0/24

        ###############
        # TLS
        ###############

        # General TLS configuration
        tls_high_cipherlist = EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH:CAMELLIA128-SHA:AES128-SHA
        tls_preempt_cipherlist = yes
        tls_ssl_options = NO_COMPRESSION

        # Outgoing TLS is more flexible because 1. not all receiving servers will
        # support TLS, 2. not all will have and up-to-date TLS stack.
        smtp_tls_security_level = may
        smtp_tls_mandatory_protocols = !SSLv2, !SSLv3
        smtp_tls_protocols =!SSLv2,!SSLv3
        smtp_tls_session_cache_database = btree:${data_directory}/smtp_scache

        ###############
        # Virtual
        ###############

        # The alias map actually returns both aliases and local mailboxes, which is
        # required for reject_unlisted_sender to work properly
        virtual_alias_domains =
        virtual_alias_maps = ${podop}alias
        virtual_mailbox_domains = ${podop}domain
        virtual_mailbox_maps = ${podop}mailbox

        # Mails are transported if required, then forwarded to Dovecot for delivery
        relay_domains = ${podop}transport
        transport_maps = ${podop}transport
        virtual_transport = lmtp:inet:mailu-dovecot:2525

        # Sender and recipient canonical maps, mostly for SRS
        sender_canonical_maps = ${podop}sendermap
        sender_canonical_classes = envelope_sender
        recipient_canonical_maps = ${podop}recipientmap
        recipient_canonical_classes= envelope_recipient,header_recipient

        # In order to prevent Postfix from running DNS query, enforce the use of the
        # native DNS stack, that will check /etc/hosts properly.
        lmtp_host_lookup = native

        ###############
        # Restrictions
        ###############

        # Delay all rejects until all information can be logged
        smtpd_delay_reject = yes

        # Allowed senders are: the user or one of the alias destinations
        smtpd_sender_login_maps = ${podop}senderlogin

        # Restrictions for incoming SMTP, other restrictions are applied in master.cf
        smtpd_helo_required = yes

        smtpd_client_restrictions =
          permit_mynetworks,
          check_sender_access ${podop}senderaccess,
          reject_non_fqdn_sender,
          reject_unknown_sender_domain,
          reject_unknown_recipient_domain,
          permit

        smtpd_relay_restrictions =
          permit_mynetworks,
          permit_sasl_authenticated,
          reject_unauth_destination

        unverified_recipient_reject_reason = Address lookup failure

        ###############
        # Milter
        ###############

        smtpd_milters = inet:mailu-rspamd:11332
        milter_protocol = 6
        milter_mail_macros = i {mail_addr} {client_addr} {client_name} {auth_authen}
        milter_default_action = tempfail

        ###############
        # Extra Settings
        ###############

dovecot:
  # logLevel: WARNING
  image:
    repository: mailu/dovecot
    # tag defaults to mailuVersion
    # tag: master
  resources:
    requests:
      memory: 500Mi
      cpu: 500m
    limits:
      memory: 500Mi
      cpu: 500m
  persistence: {}    
#  persistence:
#    claimEnabled: true
#    size: 100Gi
#    accessMode: ReadWriteOnce
#    #annotations:
#    #  "helm.sh/resource-policy": keep
#    #hostPath: /path/on/the/host
#    #existingClaim: name-of-existing.claim
#    #storageClass: "-"
#    #claimNameOverride: my-claim-name      

rspamd:
  # logLevel: WARNING
  image:
    repository: mailu/rspamd
    # tag defaults to mailuVersion
    # tag: master
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 200Mi
      cpu: 200m   
  customConfig: {}
#    localD:
#      history_redis.conf: |-
#        servers = "{{ REDIS_ADDRESS }}";
#        nrows = 2000;
#        compress = true;
#        subject_privacy = false;
  persistence: {}    
#  persistence:
#    claimEnabled: true
#    size: 100Gi
#    accessMode: ReadWriteOnce
#    #annotations:
#    #  "helm.sh/resource-policy": keep
#    #hostPath: /path/on/the/host
#    #existingClaim: name-of-existing.claim
#    #storageClass: "-"
#    #claimNameOverride: my-claim-name

clamav:
  enabled: true
  # logLevel: WARNING
  image:
    repository: mailu/clamav
    # tag defaults to mailuVersion
    # tag: master
  resources:
    requests:
      memory: 1Gi
      cpu: 1000m
    limits:
      memory: 2Gi
      cpu: 1000m
  persistence: {}    
#  persistence:
#    claimEnabled: true
#    size: 100Gi
#    accessMode: ReadWriteOnce
#    #annotations:
#    #  "helm.sh/resource-policy": keep
#    #hostPath: /path/on/the/host
#    #existingClaim: name-of-existing.claim
#    #storageClass: "-"
#    #claimNameOverride: my-claim-name      

roundcube:
  enabled: true
  # logLevel: WARNING
  image:
    repository: mailu/roundcube
    # tag defaults to mailuVersion
    # tag: master
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 200Mi
      cpu: 200m
  persistence: {}    
#  persistence:
#    claimEnabled: true
#    size: 100Gi
#    accessMode: ReadWriteOnce
#    #annotations:
#    #  "helm.sh/resource-policy": keep
#    #hostPath: /path/on/the/host
#    #existingClaim: name-of-existing.claim
#    #storageClass: "-"
#    #claimNameOverride: my-claim-name      


webdav:
  enabled: false
  # logLevel: WARNING
  image:
    repository: mailu/radicale
    # tag defaults to mailuVersion
    # tag: master
  persistence: {}    
#  persistence:
#    claimEnabled: true
#    size: 100Gi
#    accessMode: ReadWriteOnce
#    #annotations:
#    #  "helm.sh/resource-policy": keep
#    #hostPath: /path/on/the/host
#    #existingClaim: name-of-existing.claim
#    #storageClass: "-"
#    #claimNameOverride: my-claim-name    

mysql:
  image:
    repository: library/mariadb
    tag: 10.4.10
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 200m
  persistence: {}    
#  persistence:
#    claimEnabled: true
#    size: 100Gi
#    accessMode: ReadWriteOnce
#    #annotations:
#    #  "helm.sh/resource-policy": keep
#    #hostPath: /path/on/the/host
#    #existingClaim: name-of-existing.claim
#    #storageClass: "-"
#    #claimNameOverride: my-claim-name     
