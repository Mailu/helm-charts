# This file is derived from https://github.com/Mailu/Mailu/blob/master/docs/kubernetes/mailu/admin.yaml

{{- $clusterDomain := default "cluster.local" .Values.clusterDomain}}
{{- /* Define persistantVolume claimName */}}
{{- $claimName := .Values.persistence.single_pvc | ternary (include "mailu.claimName" .) .Values.admin.persistence.claimNameOverride | default (printf "%s-admin" (include "mailu.fullname" .)) }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mailu.fullname" . }}-admin
spec:
  selector:
    matchLabels:
      app: {{ include "mailu.fullname" . }}
      component: admin
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ include "mailu.fullname" . }}
        component: admin
      {{- with .Values.admin.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: admin
        image: {{ .Values.admin.image.repository }}:{{ default .Values.mailuVersion .Values.admin.image.tag }}
        imagePullPolicy: Always
        volumeMounts:
          - name: data
            subPath: admin
            mountPath: /data
          - name: data
            mountPath: /dkim
            subPath: dkim
          {{- if .Values.timezone }}
          - name: zoneinfo
            mountPath: /usr/share/zoneinfo
            readOnly: true
          - name: zoneinfo
            subPath: {{ .Values.timezone }}
            mountPath: /etc/localtime
            readOnly: true
          {{- end }}
        env:
          - name: LOG_LEVEL
            value: {{ default .Values.logLevel .Values.admin.logLevel }}
          - name: QUOTA_STORAGE_URL
            value: redis://{{ include "mailu.fullname" . }}-redis/1
          - name: RATELIMIT_STORAGE_URL
            value: redis://{{ include "mailu.fullname" . }}-redis/2
          - name: POSTMASTER
            value: {{ default "postmaster" .Values.postmaster }}
          - name: DOMAIN
            value: "{{ required "domain" .Values.domain }}"
          - name: HOSTNAMES
            value: "{{ join "," .Values.hostnames }}"
          - name: IMAP_ADDRESS
            value: {{ include "mailu.fullname" . }}-dovecot.{{ .Release.Namespace }}
          - name: POP3_ADDRESS
            value: {{ include "mailu.fullname" . }}-dovecot.{{ .Release.Namespace }}
          - name: SMTP_ADDRESS
            value: {{ include "mailu.fullname" . }}-postfix.{{ .Release.Namespace }}
          - name: AUTHSMTP_ADDRESS
            value: {{ include "mailu.fullname" . }}-postfix.{{ .Release.Namespace }}
          - name: REDIS_ADDRESS
            value: {{ include "mailu.fullname" . }}-redis.{{ .Release.Namespace }}
          {{- if .Values.roundcube.enabled }}
          - name: WEBMAIL
            value: roundcube
          - name: WEB_WEBMAIL
            value: {{ required "roundcube.uri" .Values.roundcube.uri }}
          - name: WEBMAIL_ADDRESS
            value: {{ include "mailu.fullname" . }}-roundcube.{{ .Release.Namespace }}.svc.{{ $clusterDomain }}
          {{- else }}
          - name: WEBMAIL
            value: none
          - name: WEBMAIL_ADDRESS
            value: localhost
          - name: WEB_WEBMAIL
            value: /
          {{- end }}
          - name: FRONT_ADDRESS
            value: {{ include "mailu.fullname" . }}-front.{{ .Release.Namespace }}
          - name: RECIPIENT_DELIMITER
            value: +
          - name: SUBNET
            value: {{ .Values.subnet }}
          - name: PASSWORD_SCHEME
            value: "{{ default "PBKDF2" .Values.passwordScheme }}"
          {{- if hasKey .Values "secretKeyRef" }}
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ .Values.secretKeyRef.name }}
                key: {{ .Values.secretKeyRef.key}}
          {{- else }}
          - name: SECRET_KEY
            value: "{{ required "secretKey" .Values.secretKey }}"
          {{- end}}
          - name: AUTH_RATELIMIT_IP
            value: "{{ required "mail.authRatelimitIP" .Values.mail.authRatelimitIP }}"
          - name: AUTH_RATELIMIT_IP_V4_MASK
            value: "{{ required "mail.authRatelimitIPv4Mask" .Values.mail.authRatelimitIPv4Mask }}"
          - name: AUTH_RATELIMIT_IP_V6_MASK
            value: "{{ required "mail.authRatelimitIPv6Mask" .Values.mail.authRatelimitIPv6Mask }}"
          - name: AUTH_RATELIMIT_USER
            value: "{{ required "mail.authRatelimitUser" .Values.mail.authRatelimitUser }}"
          - name: AUTH_RATELIMIT_EXEMPTION_LENGTH
            value: "{{ required "mail.authRatelimitExemtionLength" .Values.mail.authRatelimitExemtionLength }}"
          - name: AUTH_RATELIMIT_EXEMPTION
            value: "{{ default "" .Values.mail.authRatelimitExemtion }}"
          - name: MESSAGE_RATELIMIT
            value: "{{ required "mail.messageRatelimit" .Values.mail.messageRatelimit }}"
          - name: MESSAGE_RATELIMIT_EXEMPTION
            value: "{{ default "" .Values.mail.messageRatelimitExemption }}"
          {{- if .Values.initialAccount }}
          - name: INITIAL_ADMIN_ACCOUNT
            value: {{ required "initialAccount.username" .Values.initialAccount.username }}
          - name: INITIAL_ADMIN_DOMAIN
            value: {{ required "initialAccount.domain" .Values.initialAccount.domain }}
          - name: INITIAL_ADMIN_PW
            value: {{ required "initialAccount.password" .Values.initialAccount.password }}
          {{- end }}
          {{- if eq .Values.database.type "sqlite" }}
          - name: DB_FLAVOR
            value: sqlite
          {{- else if eq .Values.database.type "mysql" }}
          - name: DB_FLAVOR
            value: mysql
          - name: DB_USER
            value: {{ required "database.mysql.user" .Values.database.mysql.user }}
          - name: DB_PW
            value: {{ required "database.mysql.password" .Values.database.mysql.password }}
          - name: DB_NAME
            value: {{ required "database.mysql.database" .Values.database.mysql.database }}
          - name: DB_HOST
            {{- if .Values.database.mysql.host }}
            value: {{ .Values.database.mysql.host }}
            {{- else }}
            value: {{ include "mailu.fullname" . }}-mysql
            {{- end }}
          {{- else if eq .Values.database.type "postgresql" }}
          - name: DB_FLAVOR
            value: postgresql
          - name: DB_USER
            value: {{ required "database.postgresql.user" .Values.database.postgresql.user }}
          - name: DB_PW
            value: {{ required "database.postgresql.password" .Values.database.postgresql.password }}
          - name: DB_NAME
            value: {{ required "database.postgresql.database" .Values.database.postgresql.database }}
          - name: DB_HOST
            {{- if .Values.database.postgresql.host }}
            value: {{ .Values.database.postgresql.host }}
            {{- end }}
          {{- else }}
          value: {{ required "database.type must be one of sqlite/mysql/postgresql" .None }}
          {{- end }}
        ports:
          - name: http
            containerPort: 80
            protocol: TCP
        {{- with .Values.admin.resources }}
        resources:
        {{- .|toYaml|nindent 10}}
        {{- end }}
        {{- if .Values.admin.startupProbe}}
        startupProbe:
          httpGet:
            path: /sso/login
            port: http
          periodSeconds:  {{ default 10 .Values.admin.startupProbe.periodSeconds }} 
          failureThreshold: {{ default 30 .Values.admin.startupProbe.failureThreshold }} 
          timeoutSeconds: {{ default 5 .Values.admin.startupProbe.timeoutSeconds }} 
        {{- end }}
        {{ if .Values.admin.livenessProbe -}}
        livenessProbe:
          httpGet:
            path: /sso/login
            port: http
          periodSeconds: {{ default 10 .Values.admin.livenessProbe.periodSeconds }}
          failureThreshold: {{ default 3 .Values.admin.livenessProbe.failureThreshold }}
          timeoutSeconds: {{ default 5 .Values.admin.livenessProbe.timeoutSeconds }}
        {{- end }}
        {{ if .Values.admin.readinessProbe -}}
        readinessProbe:
          httpGet:
            path: /sso/login
            port: http
          periodSeconds: {{ default 10 .Values.admin.readinessProbe.periodSeconds }}
          failureThreshold: {{ default 1 .Values.admin.readinessProbe.failureThreshold }}
          timeoutSeconds: {{ default 5 .Values.admin.readinessProbe.timeoutSeconds }}
        {{- end }}
        {{- with .Values.admin.lifecycle }}
        lifecycle:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ $claimName }}
        {{- if .Values.timezone }}
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
        {{- end }}
  {{- with .Values.admin.updateStrategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}


{{- if not .Values.persistence.single_pvc }}
---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name:  {{ $claimName }}
{{- if .Values.admin.persistence.annotations }}
  annotations:
{{ toYaml .Values.admin.persistence.annotations | indent 4 }}
{{- end }}
spec:
  accessModes:
    - {{ .Values.admin.persistence.accessMode }}
  resources:
    requests:
      storage: {{ .Values.admin.persistence.size }}
  {{- if .Values.admin.persistence.storageClass }}
  storageClassName: {{ .Values.admin.persistence.storageClass }}
  {{- end }}
{{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "mailu.fullname" . }}-admin
  labels:
    app: {{ include "mailu.fullname" . }}
    component: admin
spec:
  selector:
    app: {{ include "mailu.fullname" . }}
    component: admin
  ports:
  - name: http
    port: 80
    protocol: TCP
