hostnames:
  - mailu.cluster.local

domain: mailu.cluster.local

initialAccount:
  enabled: true
  username: mailadmin
  domain: mailu.cluster.local
  password: chang3m3!

secretKey: chang3m3!

subnet: 192.168.0.0/16

networkPolicy:
  enabled: true

persistence:
  single_pvc: false

postgresql:
  enabled: true
  postgresqlUsername: mailu
  postgresqlPassword: chang3m3!
  postgresqlDatabase: mailu
  primary:
    persistence:
      enabled: true
      size: 10Gi
    resources:
      requests:
        memory: 500Mi
        cpu: 100m
      limits:
        memory: 1Gi
        cpu: 2

ingress:
  enabled: true
  selfSigned: true
  annotations:
    auth.cluster.arpa/enabled: "false"

front:
  logLevel: INFO
  # image:
  #   tag: master
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: 2

admin:
  logLevel: DEBUG
  # image:
  #   tag: master
  resources:
    requests:
      memory: 500Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: 2
  initContainers:
    # Add an initcontainer to wait for redis to be deployed
    - name: wait-for-redis
      image: busybox:1.34
      command:
        [
          "sh",
          "-c",
          'until nc -z -v -w30 {{ template "mailu.redis.serviceFqdn" . }} {{ template "mailu.redis.port" . }}; do echo "Waiting for redis..."; sleep 5; done;',
        ]
      resources:
        requests:
          memory: 50Mi
          cpu: 10m
        limits:
          memory: 1Gi
          cpu: 2

postfix:
  logLevel: INFO
  # image:
  #   tag: master
  resources:
    requests:
      memory: 2Gi
      cpu: 100m
    limits:
      memory: 2Gi
      cpu: 2

dovecot:
  logLevel: INFO
  # image:
  #   tag: master
  resources:
    requests:
      memory: 500Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: 2
  serviceMonitor:
    enabled: true
    interval: 30s
    # Random relabellings to test behavior
    metricRelabelings:
      - action: keep
        regex: "kube_(daemonset|deployment|pod|namespace|node|statefulset).+"
        sourceLabels: [__name__]
    relabelings:
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        separator: ;
        regex: ^(.*)$
        targetLabel: nodename
        replacement: $1
        action: replace
  overrides:
    dovecot.conf: |
      ##
      ## Statistics and metrics
      ##

      # Dovecot supports gathering statistics from events.
      # Currently there are no statistics logged by default, and therefore they must
      # be explicitly added using the metric configuration blocks.
      #
      # Unlike old stats, the new statistics do not require any plugins loaded.
      #
      # See https://doc.dovecot.org/2.3/configuration_manual/stats/ for more details.

      ##
      ## Example metrics
      ##

      metric auth_success {
        filter = event=auth_request_finished AND success=yes
      }

      metric auth_failures {
        filter = event=auth_request_finished AND NOT success=yes
      }

      metric imap_command {
        filter = event=imap_command_finished
        group_by = cmd_name tagged_reply_state
      }

      metric smtp_command {
        filter = event=smtp_server_command_finished
        group_by = cmd_name status_code duration:exponential:1:5:10
      }

      metric mail_delivery {
        filter = event=mail_delivery_finished
        group_by = duration:exponential:1:5:10
      }

      ##
      ## Prometheus
      ##

      # To allow access to statistics with Prometheus, enable http listener
      # on stats process. Stats will be available on /metrics path.
      #
      # See https://doc.dovecot.org/2.3/configuration_manual/stats/openmetrics/ for more
      # details.

      service stats {
        inet_listener http {
          port = 9900
        }
      }

rspamd:
  logLevel: INFO
  # image:
  #   tag: master
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: 2
  serviceMonitor:
    enabled: true
    interval: 30s
    # Random relabellings to test behavior
    metricRelabelings:
      - action: keep
        regex: "kube_(daemonset|deployment|pod|namespace|node|statefulset).+"
        sourceLabels: [__name__]
    relabelings:
      - sourceLabels: [__meta_kubernetes_pod_node_name]
        separator: ;
        regex: ^(.*)$
        targetLabel: nodename
        replacement: $1
        action: replace

clamav:
  logLevel: INFO
  # image:
  #   tag: master
  resources:
    requests:
      memory: 1Gi
      cpu: 100m
    limits:
      memory: 2Gi
      cpu: 2

webmail:
  logLevel: INFO
  # image:
  #   tag: master
  resources:
    requests:
      memory: 100Mi
      cpu: 100m
    limits:
      memory: 1Gi
      cpu: 2

webdav:
  logLevel: INFO
  image:
    tag: master

fetchmail:
  logLevel: INFO
  # image:
  #   tag: master

redis:
  master:
    resources:
      requests:
        memory: 500Mi
        cpu: 100m
      limits:
        memory: 1Gi
        cpu: 2

tika:
  enabled: true
  languages:
    - en
    - fr

oletools:
  enabled: true

api:
  enabled: true
  token: chang3m3!
